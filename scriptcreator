#!/bin/bash
#
#    scriptcreator
#    Author- Shawn Miller
###########################################################
##    This script is designed to create other scripts
##    pre-populated with standard fields and ready
##    for writing code.
##    Requires 1 arguement, a 2nd arguement is optional.
###########################################################
##    Completed-
##    1. Create another file with the contents of the template
##    2. Edit the new file with Author and script name
##    4. Set the executable permisson on the new file
##    5. On First-Run of This script, request User Input
##        for Author and PATH
##    6. Set choice to edit the new file immediately or not
##    7. Add colors to output
#
###########################################################
#####    GNU_GPL
###########################################################
#
gpl_info () {
    cat <<EOT
${LTCYN}
####c4#############################################################################
###                                                                             ###
##                      GNU/GPL Info                                             ##
##        create_script ver-1.1 - Alpha/Beta begun 15 August 2018		 ##
##        create_script ver-2.1 - Production release 11 Sepember 2018		 ##
##        Forked to scriptcreator ver-2.1 - 16 Sepember 2018			 ##
##      Released under GPL v2.0, See www.gnu.org for full license info           ##
##      Copyright (C) 2015  Shawn Miller, The Wood-Bee Company			 ##
##              EMAIL- shawn@woodbeeco.com                                       ##
##                   - seaphor@woodbeeco.com                                     ##
##  This program is free software; you can redistribute it and/or modify         ##
##    it under the terms of the GNU General Public License as published by       ##
##    the Free Software Foundation; either version 2 of the License, or          ##
##    (at your option) any later version.                                        ##
##                                                                               ##
##    This program is distributed in the hope that it will be useful,            ##
##    but WITHOUT ANY WARRANTY; without even the implied warranty of             ##
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              ##
##    GNU General Public License for more details.                               ##
##                                                                               ##
##    See this complete License at:                                              ##
##    https://github.com/SeaPhor/SeaPhor-Scripts/blob/master/LICENSE		 ##
###                                                                             ###
####w#################################b######################################c####4
${RESET}
EOT
}
#
###########################################################
####    Global Variables
###########################################################
#
PROGNAME=$(basename $0)
PROGVERS="1.0.1-03"
REVDATE="07 Oct 2018"
#
###########################################################
####    Script Options/Usage
###########################################################
#
##    Usage - Options
opts_use () {
  cat <<EOT

  ${BOLD}${LTCYN} ${PROGNAME}${RESET}${LTYLLW}-
    Author-${LTCYN} Shawn Miller${BOLD}${YELLOW}
  Description-${RESET}${LTYLLW}
    This script is designed to create other scripts
    pre-populated with standard fields and ready
    for writing code.
    Requires 1 arguement, a 2nd arguement is optional.${BOLD}${YELLOW}
  Usage-${RESET}${LTCYN}
    ${PROGNAME} [<scriptname>|OPTION] [OPTIONAL]${BOLD}${GREEN}
    ${PROGNAME} ${LTCYN}<${GREEN}scriptname${LTCYN}>${GREEN}
    ${PROGNAME} help${RESET}${LTYLLW}
    Optional-${BOLD}${GREEN}
    ${PROGNAME} ${LTCYN}<${GREEN}scriptname${LTCYN}>${GREEN} edit${YELLOW}
  Options-${RESET}${LTCYN}
    <scriptname>${LTYLLW}    What you want your script to be named${LTCYN}
    help${LTYLLW}            Prints this dialog and exits${LTCYN}
    vers${LTYLLW}            Prints the release version and date of release and exits${LTCYN}
    gpl${LTYLLW}             Prints the GPL Info and exits${BOLD}${YELLOW}
  Optional-${RESET}${LTCYN}
    edit${LTYLLW}            If${BOLD}${LTCYN} \$EDITOR${RESET}${LTYLLW} is set, otherwise it will open your script with vim${BOLD}${YELLOW}
  Adding GPL to your script-${RESET}${LTMAG} (Run "${LTCYN}${PROGNAME} gpl${LTMAG}" to see mine)${LTYLLW}
    If you want to add a GNU/GPL to your new script, I suggest you create/copy-edit
    one and place it in your "snippets" directory. Then edit the script you just
    created with vim, I named mine "~/snippets/gnugpl". In command mode move the 
    cursor to the line above where you want to insert the GPL and type this:${LTCYN}
    :r ~/snippets/gnugpl${LTYLLW} and hit ENTER.
${RESET}
EOT
}
#
###########################################################
####    Color Variables
###########################################################
#
RED=`tput setaf 1`
GREEN=`tput setaf 2`
YELLOW=`tput setaf 3`
BLUE=`tput setaf 4`
CYAN=`tput setaf 6`
LTRED=`tput setaf 9`
LTGRN=`tput setaf 10`
LTYLLW=`tput setaf 11`
LTBLU=`tput setaf 12`
LTMAG=`tput setaf 13`
LTCYN=`tput setaf 14`
BOLD=`tput bold`
RESET=`tput sgr0`
#
###########################################################
####    Environment Variables and Information Gathering
###########################################################
#
##    Check for arguements
[[ $1 ]] || { opts_use; echo "${BOLD}${RED}Missing arguement${RESET}"; exit 1; }
[[ $@ =~ "help" ]] && { opts_use; exit 1; }
[[ $1 = "vers" ]] && { echo "${PROGNAME} - ${PROGVERS} released ${REVDATE}"; exit 1; }
[[ $1 = "gpl" ]] && { gpl_info; exit 0; }
[[ $@ =~ "edit" ]] && EDITNOW=true || EDITNOW=false
PWD=`pwd`
PROGDATE="${RDATE}"
RDATE="`date +%d\ %b\ %Y`"
SCRPTNAM="$1"
BINDIR="${HOME}/scripts"
FILNAM="${BINDIR}/${SCRPTNAM}"
[[ $EDITOR ]] || EDITOR="vim"
AUTHOR="`getent passwd ${USER} | awk -F: '{print $5}'`"
TDATE="`date +%a\ %b\ %d\ %Y`"
if [[ ! -d ${BINDIR} ]]; then
    if mkdir "${BINDIR}"; then
        echo "${CYAN}Created ${BINDIR}${RESET}"
    else
        echo "${BOLD}${RED}Could not create ${BINDIR}${RESET}"
        exit 1
    fi
fi
if [[ -e ${FILNAM} ]]; then
    echo "${BOLD}${RED}Filename ${FILNAM} already exists.${RESET}"
    exit 1
fi
if type "${SCRPTNAME}" > /dev/null 2>&1; then
    echo "${BOLD}${RED}There is already a command with the name ${SCRPTNAM}${RESET}"
    exit 1
fi
#
###########################################################
####    Declare Functions, Loops, and other statements
###########################################################
#
script_templt () {
##    Use 'DON' instead of 'EOT' so that template can use the standard 'EOT'.
    cat <<DON
#!/bin/bash
#
#    ${SCRPTNAM}
#    Author- ${AUTHOR}
#    Creation Date- ${TDATE}
###########################################################
##    First line of script description
##    Second line of script description
####    Third line of script description
###########################################################
##    First script objective
##    Second script objective
##    Third script objective
#
###########################################################
####    Global Variables
###########################################################
#
PROGNAME=\$(basename \$0)
PROGVERS="0.0.0-01"
PROGDATE="${RDATE}"
#
###########################################
####    Declare Color Variables
###########################################
#
[[ \$@ =~ "nocolor" ]] && NOCOLR=true || NOCOLR=false
#
if ! \$NOCOLR; then
    RED="\$(tput setaf 1)"
    GRN="\$(tput setaf 2)"
    YLLW="\$(tput setaf 3)"
    BLU="\$(tput setaf 4)"
    MAG="\$(tput setaf 5)"
    CYN="\$(tput setaf 6)"
    LTRED="\$(tput setaf 9)"
    LTGRN="\$(tput setaf 10)"
    LTYLLW="\$(tput setaf 11)"
    LTBLU="\$(tput setaf 12)"
    LTMAG="\$(tput setaf 13)"
    LTCYN="\$(tput setaf 14)"
    BGBLU="\$(tput setab 4)"
    BGYLLW="\$(tput setab 3)"
    BGLYLLW="\$(tput setab 11)"
    ULINE="\$(tput smul)"
    NULINE="\$(tput rmul)"
    SOMODE="\$(tput smso)"
    NSOMODE="\$(tput rmso)"
    BOLD="\$(tput bold)"
    RESET="\$(tput sgr0)"
fi
#
###########################################################
####    Script Options/Usage
###########################################################
#
usage () {
    cat <<EOT
Description-
    Begin Description
Options-
    Begin Options
Usage-
    Begin Usage
EOT
}
###########################################################
####    Env Variables, Conditional Logic, Information Gathering
###########################################################
##    Comment 1 - what why
##    Comment 2 - how
###########################################################
####    Declare Functions, Loops, and other statements
###########################################################
##    Comment 1 - what why
##    Comment 2 - how
###########################################################
####    Execution - CleanUp - Exit/Status
###########################################################
##    Comment 1 - what why
##    Comment 2 - how
##    Exit Cleanly
exit 0
DON
} > ${FILNAM}
#
###########################################################
####    Execution - CleanUp - Exit/Status
###########################################################
#
script_templt
chmod u+x ${FILNAM}
if ${EDITNOW}; then
    ${EDITOR} ${FILNAM}
fi
##    Exit Cleanly
exit 0
